input{\n  kafka{\n      id => \"kafka_out_fortiweb\"\n      client_id => \"out_fortiweb\"\n      bootstrap_servers => \"localhost:9094\"\n      auto_offset_reset => \"earliest\"\n      partition_assignment_strategy  => \"sticky\"\n      topics => \"in_fortiweb\"\n      consumer_threads => 2\n      codec => \"json\"\n      add_field => { \"kafka_topic\" => \"in_fortiweb\" }\n  }\n}\n\n\nfilter{\n\tif [event][original] and [message] {\n\t\tmutate {\n\t\t\tremove_field => [\"[event][original]\"]\n\t\t}\n\t}\n\t# Do not activate below line\n\t# if [message] { fingerprint { source => [\"message\"] method => \"MD5\" key => \"${HMAC_SALT:APKS!em}\" target => \"event.hash\" } }\n\n\tmutate {\n\t\tadd_field => {\n\t\t\t\"[data_source][name]\" => \"fortiweb\"\n\t\t\t\"[enrich_activator]\" => false\n\t\t}\n\t}\n\tif [enrich_activator] {\n\t\tmutate {\n\t\t\tadd_field => {\n\t\t\t\t\"[ioc][ip]\" => false\n\t\t\t\t\"[ioc][url]\" => false\n\t\t\t\t\"[ioc][domain]\" => false\n\t\t\t\t\"[ioc][email]\" => false\n\t\t\t\t\"[ioc][sha256]\" => false\n\t\t\t\t\"[ioc][sha1]\" => false\n\t\t\t\t\"[enrich][network_direction]\" => false\n\t\t\t\t\"[enrich][tld]\" => false\n\t\t\t\t\"[enrich][user_agent]\" => false\n\t\t\t\t\"[enrich][dga]\" => false\n\t\t\t\t\"[enrich][geo]\" => false\n\t\t\t\t\"[enrich][top_1m]\" => false\n\t\t\t\t\"[enrich][naked_ip]\" => false\n\t\t\t\t\"[enrich][url_length]\" => false\n\t\t\t\t\"[enrich][user_agent_length]\" => false\n\t\t\t\t\"[enrich][dns_question_name_length]\" => false\n\t\t\t\t\"[enrich][commiunity_id]\" => false\n\t\t\t\t\"[enrich][uri_part]\" => false\n\t\t\t\t\"[enrich][status_code]\" => false\n\t\t\t}\n\t\t}\n\t}\n\telse {}\n\n\tmutate{\n\t\tadd_field => {\n\t\t\t\"[event][kind]\" => \"event\"\n\t\t}\n\t\tadd_tag => [\"preserve_original_event\"]\t  \n\t\tgsub => [\"message\",\"[\\\\]\",\"\"]\n\t}\n\t\n\tgrok {\n\t\tmatch => {\"message\" => \".*?>(?<kv_part>.*$)\"}\n\t}\n\t\n\tkv {\n\t\tfield_split_pattern => \"\\s(?=\\w+=)\"\n         trim_value => '\"'\n         source => \"kv_part\"\n\t\t target => \"fortiweb\"\n         remove_field => [\"kv_part\"]\t\n    }\n        \n    ruby{\n        #init => ''\n        code => '\n\t\t\tlt = event.get(\"[fortiweb][type]\")\n\t\t\tla = event.get(\"[fortiweb][action]\")\n            if lt == \"traffic\"\n                event.set(\"[event][type]\",[\"access\",\"connection\"])\n                event.set(\"[event][category]\",\"web\")\n\t\t\telsif lt == \"attack\" and la == \"Alert\" \n\t\t\t\tevent.set(\"[event][type]\",[\"access\",\"connection\"])\n                event.set(\"[event][category]\",\"web\")\n            elsif lt == \"attack\"\n                event.set(\"[event][type]\",[\"access\",\"connection\"])\n                event.set(\"[event][category]\",\"web\")\n            elsif lt == \"event\" and la == \"login\"\n\t\t\t\tevent.set(\"[event][type]\",\"user\")\n                event.set(\"[event][category]\",\"authentication\")\n\t\t\t\tevent.set(\"[event][outcome]\",\"success\")\n\t\t\telsif lt == \"event\" and la == \"logout\" \n\t\t\t\tevent.set(\"[event][type]\",\"user\")\n                event.set(\"[event][category]\",\"authentication\")\n\t\t\t\tevent.set(\"[event][outcome]\",\"unkown\")\n\t\t\telse \n                event.set(\"[event][type]\",\"info\")\n            end\n        '\n\t\t\n        }\n\t\tif [fortiweb][title] == \"Widget Stacking Shim\" {\n\t\t\tmutate {\n\t\t\t\tsplit => { \"[fortiweb][src]\" => \",\" }\n\t\t\t\tadd_field => {\"[fortiweb][src_ip]\" => \"%{[fortiweb][src][0]}\"\t\n\t\t\t\t\t\t\t\t\"[fortiweb][src_unkown]\" => \"%{[fortiweb][src][1]}\" }\n\t\t\t\tremove_field => [ \"[fortiweb][src]\" ]\n\t\t\t}\n\t\t}\n\n\t\tmutate {\n\t\t\trename => {\n\t\t\t\t\"[fortiweb][msg_id]\" => \"[event][id]\"\n\t\t\t\t\"[fortiweb][device_id]\" => \"[observer][serial_number]\"\n\t\t\t\t\"[fortiweb][pri]\" => \"[log][level]\"\n\t\t\t\t\"[fortiweb][proto]\" => \"[network][transport]\"\n\t\t\t\t\"[fortiweb][service]\" => \"[service][name]\"\n\t\t\t\t\"[fortiweb][src_ip]\" => \"[source][ip]\"\n\t\t\t\t\"[fortiweb][src]\" => \"[source][ip]\"\n\t\t\t\t\"[fortiweb][src_port]\" => \"[source][port]\"\n\t\t\t\t\"[fortiweb][dst]\" => \"[destination][ip]\"\n\t\t\t\t\"[fortiweb][dst_port]\" => \"[destination][port]\"\n\t\t\t\t\"[fortiweb][http_request_bytes]\" => \"[http][request][bytes]\"\n\t\t\t\t\"[fortiweb][http_response_bytes]\" => \"[http][response][bytes]\"\n\t\t\t\t\"[fortiweb][http_method]\" => \"[http][request][method]\"\n\t\t\t\t\"[fortiweb][http_url]\" => \"[url][original]\"\n\t\t\t\t\"[fortiweb][http_agent]\" => \"[user_agent][original]\"\n\t\t\t\t\"[fortiweb][http_retcode]\" => \"[http][response][status_code]\"\n\t\t\t\t\"[fortiweb][http_host]\" => \"[server][domain]\"\n\t\t\t\t\"[fortiweb][user_name]\" => \"[user][name]\"\n\t\t\t\t\"[fortiweb][action]\" => \"[event][action]\"\n\t\t\t\t\"[fortiweb][severity_level]\" => \"[log][level]\"\n                \"[message]\" => \"[event][original]\"\n\t\t\t\t\"[fortiweb][http_refer]\" => \"[http][request][referrer]\"\n\t\t\t\t\"[fortiweb][http_version]\" => \"[http][version]\"\n\t\t\t\t\"[fortiweb][user_agent_length]\" => \"[user_agent][length]\"\n\t\t\t}\n\t\t}\n\t\tif [source][ip] and [source][ip] !~ \"^\\d{1,3}\\.\" {\n\t\t\tgrok {\n\t\t\t\tmatch => { \"[event][original]\" => \".*?src=(?<src_ip>\\S+)\" }\n\t\t\t\tremove_field => [ \"[source][ip]\" ]\n\t\t\t}\n\t\t}\n\t\tmutate {\n\t\t\trename => { \"src_ip\" => \"[source][ip]\" }\n\t\t}\n\t\t\n\t}\n    \n\noutput{\n  elasticsearch {\n    hosts => [{% for host in groups['SF'] %}\"https://{{ hostvars[host]['ansible_host'] }}:9200\"{% if not loop.last %},{% endif %}{% endfor %}]\n    api_key => \"{{ logstash_api_key }}\"\n    data_stream => true\n    ssl => true\n    ssl_certificate_verification => false\n  }\n}