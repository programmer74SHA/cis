---
# Set kibana_system user password in Elasticsearch
- name: Set kibana_system user password
  uri:
    url: "https://{{ hostvars[inventory_hostname].node_hostname }}:{{ (es_http_base_port | default(9200) | int) + (hostvars[inventory_hostname].elasticsearch_nodes[0].port_offset | int) }}/_security/user/kibana_system/_password"
    method: PUT
    user: "{{ es_api_basic_auth_username | default('elastic') }}"
    password: "{{ es_api_basic_auth_password }}"
    force_basic_auth: yes
    validate_certs: no
    body_format: json
    body:
      password: "{{ kibana_elasticsearch_password }}"
    headers:
      Content-Type: "application/json"
    status_code: [200]
    timeout: 30
  register: kibana_password_result
  when: 
    - es_health.status is defined
    - es_health.status == 200
    - hostvars[inventory_hostname].elasticsearch_nodes is defined
  ignore_errors: true

- name: Display password set result
  debug:
    msg: |
      {% if kibana_password_result.status is defined %}
      ✅ Kibana System Password Updated Successfully
      ================================================
      - Status: {{ kibana_password_result.status }}
      - Username: kibana_system
      - Response: {{ kibana_password_result.json | default('Success') }}
      {% elif es_health.status != 200 %}
      ⚠️  Kibana System Password Update Skipped
      =========================================
      - Reason: Elasticsearch not ready (Status: {{ es_health.status | default('Unknown') }})
      - Action: Password will be set when Elasticsearch becomes available
      - Manual command if needed:
        curl -k -X PUT "https://{{ hostvars[inventory_hostname].node_hostname }}:{{ (es_http_base_port | default(9200) | int) }}/_security/user/kibana_system/_password" \
        -u "{{ es_api_basic_auth_username }}:{{ es_api_basic_auth_password }}" \
        -H "Content-Type: application/json" \
        -d '{"password":"{{ kibana_elasticsearch_password }}"}'
      {% else %}
      ⚠️  Kibana System Password Update Failed
      ========================================
      - Error: {{ kibana_password_result.msg | default('Unknown error') }}
      {% endif %}

- name: Create password recovery script
  copy:
    dest: "{{ kibana_docker_path }}/set-kibana-password.sh"
    content: |
      #!/bin/bash
      # Kibana system password recovery script
      # Generated: {{ ansible_date_time.iso8601 }}
      
      ES_HOST="{{ hostvars[inventory_hostname].node_hostname }}"
      ES_PORT="{{ (es_http_base_port | default(9200) | int) + (hostvars[inventory_hostname].elasticsearch_nodes[0].port_offset | int) }}"
      ES_USER="{{ es_api_basic_auth_username | default('elastic') }}"
      ES_PASS="{{ es_api_basic_auth_password }}"
      KIBANA_PASS="{{ kibana_elasticsearch_password }}"
      
      echo "Setting kibana_system password..."
      curl -k -X PUT "https://${ES_HOST}:${ES_PORT}/_security/user/kibana_system/_password" \
        -u "${ES_USER}:${ES_PASS}" \
        -H "Content-Type: application/json" \
        -d "{\"password\":\"${KIBANA_PASS}\"}"
      
      echo ""
      echo "Password update complete!"
    mode: "0700"
    owner: root
    group: root
  when: hostvars[inventory_hostname].elasticsearch_nodes is defined