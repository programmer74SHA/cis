---
# roles/install_kibana/tasks/setup_kibana_certificates.yml
# FIXED: Proper certificate setup for Docker-based Kibana

- name: Setup Kibana SSL certificates
  block:
    - name: Create Kibana certificate directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "1000"
        group: "1000"
        mode: "0755"
      loop:
        - "{{ kibana_certs_path }}"
        - "{{ kibana_certs_path }}/kibana"
        - "{{ kibana_certs_path }}/ca"

    - name: Check if Kibana certificates already exist
      stat:
        path: "{{ kibana_certs_path }}/kibana/kibana.crt"
      register: kibana_cert_exists

    - name: Generate Kibana certificates if not exist
      block:
        - name: Generate Kibana private key
          command: openssl genrsa -out {{ kibana_certs_path }}/kibana/kibana.key 2048
          when: not kibana_cert_exists.stat.exists

        - name: Create certificate configuration for Kibana
          copy:
            dest: "{{ kibana_certs_path }}/kibana/kibana.conf"
            content: |
              [req]
              distinguished_name = req_distinguished_name
              req_extensions = v3_req
              prompt = no

              [req_distinguished_name]
              C = {{ kibana_certificate_country_name | default('US') }}
              ST = State
              L = City
              O = {{ kibana_certificate_organization_name | default('APK SIEM') }}
              CN = {{ inventory_hostname }}-kibana

              [v3_req]
              basicConstraints = CA:FALSE
              keyUsage = nonRepudiation, digitalSignature, keyEncipherment
              subjectAltName = @alt_names

              [alt_names]
              DNS.1 = {{ inventory_hostname }}-kibana
              DNS.2 = localhost
              DNS.3 = kibana
              DNS.4 = {{ inventory_hostname }}
              IP.1 = {{ ansible_default_ipv4.address }}
              IP.2 = 127.0.0.1
            mode: "0644"

        - name: Generate certificate request for Kibana
          command: >
            openssl req -new
            -key {{ kibana_certs_path }}/kibana/kibana.key
            -out {{ kibana_certs_path }}/kibana/kibana.csr
            -config {{ kibana_certs_path }}/kibana/kibana.conf

        - name: Sign Kibana certificate with Elasticsearch CA
          command: >
            openssl x509 -req -days 365
            -in {{ kibana_certs_path }}/kibana/kibana.csr
            -CA /usr/share/siem/elasticsearch/certs/ca/ca.crt
            -CAkey /usr/share/siem/elasticsearch/certs/ca/ca.key
            -CAcreateserial
            -out {{ kibana_certs_path }}/kibana/kibana.crt
            -extensions v3_req
            -extfile {{ kibana_certs_path }}/kibana/kibana.conf

        - name: Clean up temporary files
          file:
            path: "{{ item }}"
            state: absent
          loop:
            - "{{ kibana_certs_path }}/kibana/kibana.csr"
            - "{{ kibana_certs_path }}/kibana/kibana.conf"

      when: not kibana_cert_exists.stat.exists

    - name: Copy Elasticsearch CA certificate for Kibana
      copy:
        src: "/usr/share/siem/elasticsearch/certs/ca/ca.crt"
        dest: "{{ kibana_certs_path }}/ca/ca.crt"
        owner: "1000"
        group: "1000"
        mode: "0644"
        remote_src: yes

    - name: Set proper permissions on Kibana certificates
      file:
        path: "{{ item.path }}"
        owner: "1000"
        group: "1000"
        mode: "{{ item.mode }}"
      loop:
        - { path: "{{ kibana_certs_path }}/kibana/kibana.key", mode: "0600" }
        - { path: "{{ kibana_certs_path }}/kibana/kibana.crt", mode: "0644" }
        - { path: "{{ kibana_certs_path }}/ca/ca.crt", mode: "0644" }

    - name: Verify Kibana certificate
      command: >
        openssl verify -CAfile {{ kibana_certs_path }}/ca/ca.crt
        {{ kibana_certs_path }}/kibana/kibana.crt
      register: kibana_cert_verify
      failed_when: kibana_cert_verify.rc != 0
      changed_when: false

    - name: Display certificate setup success
      debug:
        msg: |
          âœ… Kibana SSL Certificate Setup Complete!
          =======================================
          - Private Key: {{ kibana_certs_path }}/kibana/kibana.key
          - Certificate: {{ kibana_certs_path }}/kibana/kibana.crt
          - CA Certificate: {{ kibana_certs_path }}/ca/ca.crt
          - Verification: {{ kibana_cert_verify.stdout }}

  when: "'BDA' in group_names"