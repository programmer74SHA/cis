---
- name: "ðŸš€ Kibana Installation on BDA Node"
  block:
    - name: Initialize Kibana variables
      set_fact:
        kibana_docker_path: "{{ kibana_base_path }}"
        kibana_data_path: "{{ kibana_base_path }}/data"
        kibana_logs_path: "{{ kibana_base_path }}/logs"
        kibana_config_path: "{{ kibana_base_path }}/config"
        kibana_certs_path: "{{ kibana_base_path }}/certs"
        kibana_compose_path: "{{ kibana_base_path }}/docker-compose.yml"
        kibana_elasticsearch_hosts: "https://127.0.0.1:9200"
        kibana_elasticsearch_username: "elastic"
        kibana_elasticsearch_password: "{{ es_api_basic_auth_password }}"

    - name: Check if Elasticsearch is running (optional)
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:9200/_cluster/health"
        method: GET
        timeout: 5
        status_code: [200, 401, -1]
      register: es_health_check
      ignore_errors: true

    - name: Create Kibana directory structure
      file:
        path: "{{ item }}"
        state: directory
        owner: "1000"
        group: "1000"
        mode: "0755"
      loop:
        - "{{ kibana_docker_path }}"
        - "{{ kibana_data_path }}"
        - "{{ kibana_logs_path }}"
        - "{{ kibana_config_path }}"
        - "{{ kibana_certs_path }}"

    - name: Copy CA certificate if it exists
      copy:
        src: "{{ certs_base_path }}/ca/ca.crt"
        dest: "{{ kibana_certs_path }}/ca.crt"
        owner: "1000"
        group: "1000"
        mode: "0644"
        remote_src: yes
      ignore_errors: true

    - name: Generate simple Kibana configuration
      copy:
        dest: "{{ kibana_config_path }}/kibana.yml"
        content: |
          server.host: "0.0.0.0"
          server.port: 5601
          server.name: "{{ inventory_hostname }}-kibana"
          elasticsearch.hosts: ["http://127.0.0.1:9200"]
          elasticsearch.username: "kibana_system"
          elasticsearch.password: "{{ kibana_elasticsearch_password }}"
          logging.root.level: info
          telemetry.optIn: false
          pid.file: /usr/share/kibana/data/kibana.pid
        owner: "1000"
        group: "1000"
        mode: "0660"

    # - name: Generate simple Kibana Docker Compose
    #   copy:
    #     dest: "{{ kibana_compose_path }}"
    #     content: |
    #       version: '3.8'
    #       services:
    #         kibana:
    #           image: docker.apk-group.net/kibana:8.18.2
    #           container_name: kibana-{{ inventory_hostname }}
    #           restart: unless-stopped
    #           environment:
    #             - "ELASTICSEARCH_HOSTS=http://host.docker.internal:9200"
    #             - "SERVER_HOST=0.0.0.0"
    #             - "SERVER_PORT=5601"
    #           ports:
    #             - "{{ ansible_default_ipv4.address }}:5601:5601"
    #           volumes:
    #             - "{{ kibana_data_path }}:/usr/share/kibana/data"
    #             - "{{ kibana_logs_path }}:/usr/share/kibana/logs"
    #             - "{{ kibana_config_path }}/kibana.yml:/usr/share/kibana/config/kibana.yml:ro"
    #           user: "1000:1000"
    #           extra_hosts:
    #             - "host.docker.internal:host-gateway"
    #     owner: "1000"
    #     group: "1000"
    #     mode: "0644"

    - name: Setup Kibana Users
      include_tasks: setup-kibana-user.yml
      when: inventory_hostname in groups.get('BDA', [])


    - name: Generate Kibana Docker Compose
      template:
        src: docker-compose-kibana.yml.j2
        dest: "{{ kibana_docker_path }}/docker-compose.yml"
        mode: "0755"
        owner: root
        group: root
      when: inventory_hostname in groups.get('BDA', [])


    - name: Deploy Kibana (will start when Elasticsearch is ready)
      shell: |
        cd {{ kibana_docker_path }}
        docker-compose down || true
        docker-compose up -d
      ignore_errors: true

    - name: Display Kibana installation status
      debug:
        msg: |
          âœ… Kibana Installation Complete!
          ================================
          Access: http://{{ ansible_default_ipv4.address }}:5601
          (Will be available when Elasticsearch is running)

  when: "'BDA' in group_names"
  tags: [cluster, simple, kibana]
