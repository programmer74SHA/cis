# roles/install_kibana/templates/kibana.yml.j2
# Kibana Configuration
# Generated: {{ ansible_date_time.iso8601 }}
# Host: {{ inventory_hostname }}

# =================== System: Kibana Server ===================

# Kibana is served by a back end server. This setting specifies the port to use.
server.port: {{ kibana_port | default('5601') }}

# Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.
# The default is 'localhost', which usually means remote machines will not be able to connect.
# To allow connections from remote users, set this parameter to a non-loopback address.
server.host: "{{ kibana_host | default('0.0.0.0') }}"

# Enables you to specify a path to mount Kibana at if you are running behind a proxy.
# Use the `server.rewriteBasePath` setting to tell Kibana if it should remove the basePath
# from requests it receives, and to prevent a deprecation warning at startup.
# This setting cannot end in a slash.
#server.basePath: ""

# Specifies whether Kibana should rewrite requests that are prefixed with
# `server.basePath` or require that they are rewritten by your reverse proxy.
# This setting was effectively always `false` before Kibana 6.3 and will
# default to `true` starting in Kibana 7.0.
#server.rewriteBasePath: false

# Specifies the public URL at which Kibana is available for end users. If
# `server.basePath` is configured this URL should end with the same basePath.
#server.publicBaseUrl: ""

# The maximum payload size in bytes for incoming server requests.
#server.maxPayload: 1048576

# The Kibana server's name.  This is used for display purposes.
server.name: "{{ inventory_hostname }}-kibana"

# =================== System: Elasticsearch ===================

# The URLs of the Elasticsearch instances to use for all your queries.
elasticsearch.hosts: ["{{ kibana_elasticsearch_hosts | default('https://127.0.0.1:9200') }}"]

# Kibana uses an index in Elasticsearch to store saved searches, visualizations and
# dashboards. Kibana creates a new index if the index doesn't already exist.
#kibana.index: ".kibana"

# The default application to load.
#kibana.defaultAppId: "home"

# If your Elasticsearch is protected with basic authentication, these settings provide
# the username and password that the Kibana server uses to perform maintenance on the Kibana
# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which
# is proxied through the Kibana server.
elasticsearch.username: "{{ kibana_elasticsearch_username | default('elastic') }}"
elasticsearch.password: "{{ kibana_elasticsearch_password | default('YourVerySecureElasticsearchPassword123!') }}"

# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.
# These settings enable SSL for outgoing requests from the Kibana server to the browser.
#server.ssl.enabled: false
#server.ssl.certificate: /path/to/your/server.crt
#server.ssl.key: /path/to/your/server.key

# Optional settings that provide the paths to the PEM-format SSL certificate and key files.
# These files are used to verify the identity of Kibana to Elasticsearch and are required when
# xpack.security.http.ssl.client_authentication in Elasticsearch is set to required.
#elasticsearch.ssl.certificate: /path/to/your/client.crt
#elasticsearch.ssl.key: /path/to/your/client.key

# Optional setting that enables you to specify a path to the PEM file for the certificate
# authority for your Elasticsearch instance.
#elasticsearch.ssl.certificateAuthorities: [ "/path/to/your/CA.pem" ]

# To disregard the validity of SSL certificates, change this setting's value to 'none'.
elasticsearch.ssl.verificationMode: {{ 'none' if es_validate_certs == false else 'certificate' }}

# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of
# the elasticsearch.requestTimeout setting.
#elasticsearch.pingTimeout: 1500

# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value
# must be a positive integer.
elasticsearch.requestTimeout: 30000

# List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side
# headers, set this value to [] (an empty list).
#elasticsearch.requestHeadersWhitelist: [ authorization ]

# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten
# by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.
#elasticsearch.customHeaders: {}

# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.
#elasticsearch.shardTimeout: 30000

# =================== System: Logging ===================

# Set the value of this setting to off to suppress all logging output, or to debug to log everything.
logging.level: info

# Enables you to specify a file where Kibana stores log output.
logging.appenders.file.type: file
logging.appenders.file.fileName: /usr/share/kibana/logs/kibana.log
logging.appenders.file.layout.type: json

logging.root.level: info
logging.root.appenders: [default, file]

# Logs queries sent to Elasticsearch. Requires logging.level set to debug.
#logging.loggers.elasticsearch.query: debug

# Logs http responses. Requires logging.level set to debug.
#logging.loggers.http.server.response: debug

# Logs system usage information. Requires logging.level set to debug.
#logging.loggers.metrics.ops: debug

# =================== System: Other ===================

# The path where Kibana stores persistent data not saved in Elasticsearch. Defaults to data
#path.data: data

# Specifies the path where Kibana creates the process ID file.
pid.file: /usr/share/kibana/kibana.pid

# Enables you to specify a file where Kibana stores log output.
#logging.dest: stdout

# Set the value of this setting to true to suppress all logging output.
#logging.silent: false

# Set the value of this setting to true to suppress all logging output other than error messages.
#logging.quiet: false

# Set the value of this setting to true to log all events, including system usage information
# and all requests.
#logging.verbose: false

# =================== Enterprise Search ===================

# URL for Enterprise Search
#enterpriseSearch.host: http://localhost:3002

# =================== Fleet ===================

# Setup Fleet for APM
{% if setup_fleet | default(false) %}
xpack.fleet.agents.fleet_server.hosts: ["https://{{ ansible_default_ipv4.address }}:8220"]
xpack.fleet.agents.elasticsearch.hosts: ["{{ kibana_elasticsearch_hosts | default('https://127.0.0.1:9200') }}"]
xpack.fleet.packages:
  - name: apm
    version: latest
{% endif %}

# =================== APM ===================

# Enable APM app
{% if enable_apm | default(false) %}
apm_oss.enabled: true
{% endif %}

# =================== Machine Learning ===================

# Enable ML features
{% if enable_ml | default(true) %}
xpack.ml.enabled: true
{% endif %}

# =================== Security ===================

# Enable security features
xpack.security.enabled: true

# Session timeout
xpack.security.session.idleTimeout: "8h"
xpack.security.session.lifespan: "30d"

# =================== Monitoring ===================

# Enable monitoring
{% if enable_monitoring | default(true) %}
monitoring.enabled: true
monitoring.ui.ccs.enabled: false
{% endif %}

# =================== SIEM/Security ===================

# SIEM app configuration
{% if enable_siem | default(true) %}
xpack.siem.enabled: true
xpack.siem.signalsIndex: ".siem-signals-default"
{% endif %}

# =================== Maps ===================

# Maps configuration for GIS features
{% if enable_maps | default(true) %}
xpack.maps.enabled: true
xpack.maps.showMapVisualizationTypes: true
{% endif %}

# =================== Alerting ===================

# Enable alerting features
{% if enable_alerting | default(true) %}
xpack.alerting.enabled: true
xpack.actions.enabled: true
{% endif %}

# =================== Reporting ===================

# Enable reporting features
{% if enable_reporting | default(true) %}
xpack.reporting.enabled: true
xpack.reporting.kibanaServer.hostname: "{{ ansible_default_ipv4.address }}"
xpack.reporting.kibanaServer.port: {{ kibana_port | default('5601') }}
{% endif %}

# =================== Custom Configuration ===================

# Memory circuit breaker
node.options: --max-old-space-size=2048

# Map service settings
map.includeElasticMapsService: true

# Disable telemetry
telemetry.enabled: false
telemetry.optIn: false

# Advanced settings
server.compression.enabled: true
server.compression.referrerWhitelist: []

# CORS settings (disable in production)
{% if kibana_cors_enabled | default(false) %}
server.cors.enabled: true
server.cors.allowCredentials: true
server.cors.allowOrigin: "*"
{% endif %}

# =================== End of Configuration ===================

# Configuration Summary:
# - Kibana Version: {{ kibana_version | default('8.18.2') }}
# - Host: {{ inventory_hostname }} ({{ ansible_default_ipv4.address }})
# - Port: {{ kibana_port | default('5601') }}
# - Elasticsearch: {{ kibana_elasticsearch_hosts | default('https://127.0.0.1:9200') }}
# - SSL Verification: {{ 'Disabled' if es_validate_certs == false else 'Enabled' }}
# - Generated: {{ ansible_date_time.iso8601 }}