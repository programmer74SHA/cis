version: '3.8'

services:
  kibana:
    image: {{ kibana_docker_image | default('docker.apk-group.net/kibana') }}:{{ kibana_version | default('8.18.2') }}
    container_name: kibana-{{ inventory_hostname }}
    hostname: {{ hostvars[inventory_hostname].node_hostname }}
    restart: unless-stopped
    
    # FIXED: Use external network AND add host gateway for localhost ES access
    networks:
      - {{ docker_network_name }}
    
    # CRITICAL: Add extra_hosts to allow container to resolve hostnames
    extra_hosts:
      # Map all cluster hostnames
{% for host in groups['ELASTICSEARCH'] %}
{% if host != inventory_hostname %}
      - "{{ hostvars[host].node_hostname }}:{{ hostvars[host].ansible_host }}"
{% endif %}
{% endfor %}
      - "{{ hostvars[inventory_hostname].node_hostname }}:127.0.0.1"
    
    # Expose Kibana port on host interface
    ports:
      - "0.0.0.0:5601:5601"
    
    environment:
      # FIXED: Elasticsearch Configuration - use Docker container IP directly
      - "ELASTICSEARCH_HOSTS=https://{{ elasticsearch_docker_ip | default('172.30.0.3') }}:9200"
      - "ELASTICSEARCH_USERNAME={{ kibana_elasticsearch_username | default('kibana_system }}"
      - "ELASTICSEARCH_PASSWORD={{ kibana_elasticsearch_password | default('NewKibanaSystemPassword123!') }}"
      - "ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/usr/share/kibana/config/certs/ca/ca.crt"
      - "ELASTICSEARCH_SSL_VERIFICATIONMODE=none"
      
      # Connection timeouts
      - "ELASTICSEARCH_PINGTIMEOUT=30000"
      - "ELASTICSEARCH_REQUESTTIMEOUT=120000"
      
      # Server Configuration
      - "SERVER_HOST=0.0.0.0"
      - "SERVER_PORT=5601"
      - "SERVER_NAME={{ inventory_hostname }}-kibana"
      - "SERVER_PUBLICBASEURL=https://{{ hostvars[inventory_hostname].node_hostname }}:5601"
      
      # Server SSL Configuration
{% if kibana_server_ssl_enabled | default(false) %}
      - "SERVER_SSL_ENABLED=true"
      - "SERVER_SSL_KEY=/usr/share/kibana/config/certs/kibana/kibana.key"
      - "SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/certs/kibana/kibana.crt"
{% else %}
#      - "SERVER_SSL_ENABLED=true"
#      - "SERVER_SSL_KEY=/usr/share/kibana/config/certs/kibana/kibana.key"
#      - "SERVER_SSL_CERTIFICATE=/usr/share/kibana/config/certs/kibana/kibana.crt"
{% endif %}
      
      # Security Keys
      - "XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY={{ xpack_encryptedsavedobjects_key | default('7946e75bc0cad7f510d933d288ead678') }}"
      - "XPACK_REPORTING_ENCRYPTIONKEY={{ xpack_reporting_key | default('bd7bc65d6208bb27cb52b035a25d0e72') }}"
      - "XPACK_SECURITY_ENCRYPTIONKEY={{ xpack_security_key | default('2f80b83bdec5bdab7d5e9c09f67c1141') }}"
      
      # Logging
      - "LOGGING_ROOT_LEVEL=info"
      
      # Performance
      - "NODE_OPTIONS=--max-old-space-size=2048"
      
      # Telemetry
      - "TELEMETRY_OPTIN=false"
      - "TELEMETRY_ALLOWCHANGINGOPTINSTATUS=false"

    volumes:
      # Data and logs
      - "{{ kibana_data_path | default('/usr/share/siem/kibana/data') }}:/usr/share/kibana/data:Z"
      - "{{ kibana_logs_path | default('/usr/share/siem/kibana/logs') }}:/usr/share/kibana/logs:Z"
      
      # Configuration
      - "{{ kibana_config_path | default('/usr/share/siem/kibana/config') }}/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z"
      
      # SSL Certificates - use Elasticsearch certs
      - "{{ certs_base_path | default('/usr/share/siem/elasticsearch/certs') }}:/usr/share/kibana/config/certs:ro,Z"

    healthcheck:
      test: 
        - "CMD-SHELL"
        - "curl -f {% if kibana_server_ssl_enabled | default(false) %}-k https{% else %}http{% endif %}://127.0.0.1:5601/api/status || exit 1"
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 120s

    # Run as kibana user
    user: "1000:1000"
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

    # Ensure container restarts unless stopped
    restart: unless-stopped
    
    # ADDED: Ensure Elasticsearch is accessible
    depends_on:
      - check-elasticsearch

  # ADDED: Health check service to ensure ES is ready
  check-elasticsearch:
    image: curlimages/curl:latest
    command: >
      sh -c "
      echo 'Waiting for Elasticsearch...';
      until curl -k -s -f https://{{ elasticsearch_docker_ip | default('172.30.0.3') }}:9200 > /dev/null 2>&1; do
        echo 'Elasticsearch is unavailable - sleeping';
        sleep 5;
      done;
      echo 'Elasticsearch is up!';
      "
    networks:
      - {{ docker_network_name }}

# Reference external network created by Elasticsearch
networks:
  {{ docker_network_name }}:
    name: {{ docker_network_name }}
    external: true