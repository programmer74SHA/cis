- name: Set fact for clients IP address
  set_fact:
    ntp_clients: >-
      {{
        (groups['all'] | difference(groups['BDA']))
        | map('extract', hostvars, ['ansible_host'])
      }}

- name: Set fact for ntp server ip address
  set_fact:
    ntp_server_ip : "{{ hostvars[groups['BDA'][0]]['ansible_default_ipv4']['address'] }}"
  
- name: Config chrony server
  block:
    - name: Generate chrony key
      shell:
        cmd: "chronyc keygen {{ chrony_key_id }} SHA256 256"
      register: chrony_key

    - name: Insert chrony key
      lineinfile:
        path: "{{ chrony_key_file_path }}"
        state: present
        line: "{{ chrony_key.stdout }}"
        create: True 

    - name: Chrony config
      template:
        src: templates/server.conf.j2
        dest: '{{ chrony_path }}/chrony.conf'
        mode: '0644'
      register: chrony_conf_file

    - name: Enable chrony service and start
      service:
        name: '{{ chrony_service }}'
        state: started
        enabled: true

    - name: Restart chrony when config is changed
      service:
        name: '{{ chrony_service }}'
        state: restarted
      when: chrony_conf_file is changed
  when: "'BDA' in group_names"

- name: Config chrony clients
  block:
    - name: Insert chrony key
      lineinfile:
        path: "{{ chrony_key_file_path }}"
        state: present
        line: "{{ hostvars[groups['BDA'][0]]['chrony_key'].stdout }}"
        create: True 
        
    - name: Chrony config
      template:
        src: templates/clients.conf.j2
        dest: '{{ chrony_path }}/chrony.conf'
        mode: '0644'
      register: chrony_conf_file

    - name: Enable chrony service and start
      service:
        name: '{{ chrony_service }}'
        state: started
        enabled: true

    - name: Restart chrony when config is changed
      service:
        name: '{{ chrony_service }}'
        state: restarted
      when: chrony_conf_file is changed
  when: "'BDA' not in group_names"