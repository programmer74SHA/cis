cluster.name: siem-cluster
node.name: {{ inventory_hostname }}

network.host: 0.0.0.0
http.port: 9200
transport.port: 9300

{% set node_roles = [] %}

{% if 'BDA' in group_names %}
  {% if 'cluster' in ansible_run_tags %}
    {% set node_roles = node_roles + ['master', 'transform', 'ml'] %}
  {% elif 'simple' in ansible_run_tags %}
    {% set node_roles = node_roles + ['master', 'transform', 'ml', 'data', 'data_content', 'remote_cluster_client', 'data_hot'] %}
  {% endif %}
{% endif %}

{% if 'SF' in group_names %}
  {% if 'simple' in ansible_run_tags %}
    {% set node_roles = node_roles + ['ingest', 'transform'] %}
  {% endif %}
  {% if 'new-node' in ansible_run_tags %}
    {% set node_roles = node_roles + ['ingest'] %}
  {% elif 'cluster' in ansible_run_tags %}
    {% set node_roles = node_roles + ['ingest'] %}
  {% endif %}
{% endif %}

{% if inventory_hostname in groups['HOT'] %}
  {% set node_roles = node_roles + ['master' , 'data_content', 'data_hot'] %}
{% endif %}
{% if inventory_hostname in groups['WARM'] %}
  {% set node_roles = node_roles + ['data_warm'] %}
{% endif %}
{% if inventory_hostname in groups['COLD'] %}
  {% set node_roles = node_roles + ['data_cold'] %}
{% endif %}
{% if inventory_hostname in groups['FROZEN'] %}
  {% set node_roles = node_roles + ['data_frozen'] %}
{% endif %}

node.roles: {{ node_roles | unique | list }}

discovery.seed_hosts: [{% for host in groups['HOT'] + groups['BDA'] %}"{{ hostvars[host].ansible_default_ipv4.address }}"{% if not loop.last %},{% endif %}{% endfor %}]

cluster.initial_master_nodes: [{% for host in groups['HOT'] + groups['BDA'] %}"{{ hostvars[host].ansible_default_ipv4.address }}"{% if not loop.last %},{% endif %}{% endfor %}]

path.data: /usr/share/elasticsearch/data
path.logs: /usr/share/elasticsearch/logs

cluster.max_shards_per_node: 2000
action.auto_create_index: true

xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.verification_mode: certificate
xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.key
xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
xpack.security.transport.ssl.certificate_authorities: /usr/share/elasticsearch/config/certs/ca/ca.crt

xpack.security.http.ssl.enabled: true
xpack.security.http.ssl.verification_mode: certificate
xpack.security.http.ssl.key: /usr/share/elasticsearch/config/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.key
xpack.security.http.ssl.certificate: /usr/share/elasticsearch/config/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
xpack.security.http.ssl.certificate_authorities: /usr/share/elasticsearch/config/certs/ca/ca.crt

search.default_search_timeout: "1200s"
ingest.geoip.downloader.endpoint: "http://{{ hostvars[groups['BDA'][0]]['ansible_default_ipv4']['address'] }}:82/overview.json"
