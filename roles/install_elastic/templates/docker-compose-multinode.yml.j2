version: '3.8'

services:
{%- for node in elasticsearch_nodes %}
  {{ node.name }}:
    image: {{ elasticsearch_docker_image }}:{{ es_version }}
    container_name: {{ node.name }}
    hostname: {{ node.name }}
    restart: unless-stopped
    
    environment:
      node.name: {{ node.name }}
      cluster.name: {{ es_cluster_name | default('siem-cluster') }}
      network.host: "0.0.0.0"
      http.port: "9200"
      transport.port: "9300"
      discovery.seed_hosts: "{{ elasticsearch_seed_hosts }}"
      cluster.initial_master_nodes: "{{ elasticsearch_master_nodes }}"
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: "-Xms{{ node.heap_size | default('1g') }} -Xmx{{ node.heap_size | default('1g') }}"
      xpack.security.enabled: "true"
{%- set roles_list = [] %}
{%- for role in node.roles %}
{%- set _ = roles_list.append('"' + role + '"') %}
{%- endfor %}
      node.roles: "[{{ roles_list | join(',') }}]"
      cluster.max_shards_per_node: "2000"
      action.auto_create_index: "true"
{%- if es_enable_http_ssl | default(true) %}
      xpack.security.http.ssl.enabled: "true"
      xpack.security.http.ssl.key: "/usr/share/elasticsearch/config/certs/{{ node.name }}/{{ node.name }}.key"
      xpack.security.http.ssl.certificate: "/usr/share/elasticsearch/config/certs/{{ node.name }}/{{ node.name }}.crt"
      xpack.security.http.ssl.certificate_authorities: "/usr/share/elasticsearch/config/certs/ca/ca.crt"
{%- endif %}
{%- if es_enable_transport_ssl | default(true) %}
      xpack.security.transport.ssl.enabled: "true"
      xpack.security.transport.ssl.key: "/usr/share/elasticsearch/config/certs/{{ node.name }}/{{ node.name }}.key"
      xpack.security.transport.ssl.certificate: "/usr/share/elasticsearch/config/certs/{{ node.name }}/{{ node.name }}.crt"
      xpack.security.transport.ssl.certificate_authorities: "/usr/share/elasticsearch/config/certs/ca/ca.crt"
{%- endif %}
{%- if es_api_basic_auth_password is defined %}
      ELASTIC_PASSWORD: "{{ es_api_basic_auth_password }}"
{%- endif %}

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

    ports:
      - "{{ ansible_default_ipv4.address }}:{{ es_http_base_port + node.port_offset }}:9200"
      - "{{ ansible_default_ipv4.address }}:{{ es_transport_base_port + node.port_offset }}:9300"

    volumes:
      - "/usr/share/siem/elasticsearch/{{ node.name }}/data:/usr/share/elasticsearch/data:Z"
      - "/usr/share/siem/elasticsearch/{{ node.name }}/logs:/usr/share/elasticsearch/logs:Z"
      - "/usr/share/siem/elasticsearch/{{ node.name }}/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z"
      - "/usr/share/siem/elasticsearch/{{ node.name }}/config/jvm.options:/usr/share/elasticsearch/config/jvm.options:ro,Z"
      - "/usr/share/siem/elasticsearch/certs:/usr/share/elasticsearch/config/certs:ro,Z"

    networks:
      - elastic

    healthcheck:
{%- if es_enable_http_ssl | default(true) and es_api_basic_auth_password is defined %}
      test: ["CMD-SHELL", "curl -f -k -u {{ es_api_basic_auth_username | default('elastic') }}:{{ es_api_basic_auth_password }} https://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=30s || exit 1"]
{%- else %}
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
{%- endif %}
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 120s

    user: "1000:1000"
    
    deploy:
      resources:
        limits:
{%- set heap_gb = node.heap_size | default('1g') | regex_replace('g$', '') | int %}
          memory: "{{ heap_gb * 2 }}G"
        reservations:
          memory: "{{ node.heap_size | default('1g') }}"

{%- if not loop.last %}

{%- endif %}
{%- endfor %}

networks:
  elastic:
    external: true