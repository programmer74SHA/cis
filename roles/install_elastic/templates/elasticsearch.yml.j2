# roles/install_elastic/templates/elasticsearch.yml.j2
# FIXED for Elasticsearch 8.18.2 compatibility

# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# Compatible with: Elasticsearch 8.18.2
#
# ---------------------------------- Cluster -----------------------------------

# Use a descriptive name for your cluster:
cluster.name: {{ es_cluster_name | default('siem-cluster') }}

# ------------------------------------ Node ------------------------------------

# Use a descriptive name for the node:
node.name: {{ inventory_hostname }}

# Add custom attributes to the node:
node.attr.rack: {{ node_rack | default('r1') }}
node.attr.zone: {{ node_zone | default('zone1') }}

# FIXED: Node roles configuration (ES 8.x format)
{% if elasticsearch_node_roles is defined and elasticsearch_node_roles | length > 0 %}
node.roles: {{ elasticsearch_node_roles | to_json }}
{% else %}
# Fallback role assignment based on inventory groups
{% set node_roles = [] %}
{% if 'BDA' in group_names %}
  {% if 'cluster' in ansible_run_tags %}
    {% set node_roles = node_roles + ['master', 'transform', 'ml'] %}
  {% elif 'simple' in ansible_run_tags %}
    {% set node_roles = node_roles + ['master', 'transform', 'ml', 'data', 'data_content', 'remote_cluster_client', 'data_hot'] %}
  {% endif %}
{% endif %}
{% if 'SF' in group_names %}
  {% if 'simple' in ansible_run_tags %}
    {% set node_roles = node_roles + ['ingest', 'transform'] %}
  {% elif 'cluster' in ansible_run_tags or 'new-node' in ansible_run_tags %}
    {% set node_roles = node_roles + ['ingest'] %}
  {% endif %}
{% endif %}
{% if inventory_hostname in groups['HOT'] %}
  {% set node_roles = node_roles + ['master', 'data_content', 'data_hot'] %}
{% endif %}
{% if inventory_hostname in groups['WARM'] %}
  {% set node_roles = node_roles + ['data_warm'] %}
{% endif %}
{% if inventory_hostname in groups['COLD'] %}
  {% set node_roles = node_roles + ['data_cold'] %}
{% endif %}
{% if inventory_hostname in groups['FROZEN'] %}
  {% set node_roles = node_roles + ['data_frozen'] %}
{% endif %}
{% if node_roles | length == 0 %}
  {% set node_roles = ['data'] %}
{% endif %}
node.roles: {{ node_roles | unique | to_json }}
{% endif %}

# REMOVED: Deprecated node.master, node.data, node.ingest settings
# These are now handled by node.roles above

# ----------------------------------- Paths ------------------------------------

# Path to directory where to store the data (separate multiple locations by comma):
path.data: /usr/share/elasticsearch/data

# Path to log files:
path.logs: /usr/share/elasticsearch/logs

# ----------------------------------- Memory -----------------------------------

# Lock the memory on startup:
bootstrap.memory_lock: true

# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the heap.

# ---------------------------------- Network -----------------------------------

# By default Elasticsearch is only accessible on localhost. Set a different
# address here to expose this node on the network:
network.host: ["localhost", "127.0.0.1", "{{ ansible_default_ipv4.address }}"]

# By default Elasticsearch listens for HTTP traffic on the first free port it
# finds starting at 9200. Set a specific HTTP port here:
http.port: 9200

# Transport layer settings
transport.host: 0.0.0.0
transport.port: 9300

# --------------------------------- Discovery ----------------------------------

# Create unique list of master-eligible hosts
{% set master_eligible_hosts = (groups['HOT'] | default([]) + groups['BDA'] | default([])) | unique %}

# Pass an initial list of hosts to perform discovery when this node is started:
discovery.seed_hosts: [{% for host in master_eligible_hosts %}"{{ hostvars[host].ansible_default_ipv4.address }}"{% if not loop.last %}, {% endif %}{% endfor %}]

# Bootstrap the cluster using an initial set of master-eligible nodes:
cluster.initial_master_nodes: [{% for host in master_eligible_hosts %}"{{ hostvars[host].ansible_default_ipv4.address }}"{% if not loop.last %}, {% endif %}{% endfor %}]

# For more information, consult the discovery and cluster formation documentation:
# https://www.elastic.co/guide/en/elasticsearch/reference/current/discovery-settings.html

# ---------------------------------- Various -----------------------------------

# Allow wildcard deletion of indices:
action.destructive_requires_name: false

# Auto create indices
action.auto_create_index: true

# Maximum number of shards per node
cluster.max_shards_per_node: 2000

# Search timeout
search.default_search_timeout: 1200s

# ---------------------------------- Security ----------------------------------

# Enable security features
xpack.security.enabled: {{ es_enable_security | default('true') }}

{% if es_enable_http_ssl | default(true) %}
# HTTP SSL configuration
xpack.security.http.ssl.enabled: true
xpack.security.http.ssl.key: /usr/share/elasticsearch/config/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.key
xpack.security.http.ssl.certificate: /usr/share/elasticsearch/config/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
xpack.security.http.ssl.certificate_authorities: /usr/share/elasticsearch/config/certs/ca/ca.crt
xpack.security.http.ssl.verification_mode: {{ es_ssl_verification_mode | default('certificate') }}
xpack.security.http.ssl.client_authentication: optional
{% else %}
# HTTP SSL disabled
xpack.security.http.ssl.enabled: false
{% endif %}

{% if es_enable_transport_ssl | default(true) %}
# Transport SSL configuration
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.key
xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/certs/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
xpack.security.transport.ssl.certificate_authorities: /usr/share/elasticsearch/config/certs/ca/ca.crt
xpack.security.transport.ssl.verification_mode: {{ es_ssl_verification_mode | default('certificate') }}
xpack.security.transport.ssl.client_authentication: required
{% else %}
# Transport SSL disabled
xpack.security.transport.ssl.enabled: false
{% endif %}

# ---------------------------------- License -----------------------------------

# Disable license warnings for enterprise features
xpack.license.self_generated.type: basic

# --------------------------------- Monitoring ---------------------------------

# Monitoring settings (ES 8.x compatible)
xpack.monitoring.collection.enabled: true
xpack.monitoring.collection.interval: 10s
xpack.monitoring.elasticsearch.collection.enabled: false

# ---------------------------------- Machine Learning --------------------------

{% if 'ml' in elasticsearch_node_roles | default([]) %}
# Machine Learning enabled for this node
xpack.ml.enabled: true
xpack.ml.node_concurrent_job_allocations: 2
{% else %}
# Machine Learning disabled for this node
xpack.ml.enabled: false
{% endif %}

# ---------------------------------- GeoIP Database ----------------------------

# GeoIP database downloader endpoint (for offline environments)
ingest.geoip.downloader.endpoint: "http://{{ hostvars[groups['BDA'][0]]['ansible_default_ipv4']['address'] }}:82/overview.json"

# ---------------------------------- Performance -------------------------------

# Thread pool settings (simplified for ES 8.x)
thread_pool.search.size: {{ (ansible_processor_vcpus * 1.5) | int }}
thread_pool.write.size: {{ ansible_processor_vcpus }}

# Basic indexing settings
indices.memory.index_buffer_size: 20%
indices.queries.cache.size: 20%
indices.requests.cache.size: 5%

# ---------------------------------- Custom Settings ---------------------------

# Disable automatic index creation for specific patterns
{% if es_config is defined %}
{% for key, value in es_config.items() %}
{% if key != 'cluster.name' %}
{{ key }}: {{ value | to_json }}
{% endif %}
{% endfor %}
{% endif %}

# ---------------------------------- Logging -----------------------------------

# Set logging level (overridden by log4j2.properties)
logger.level: INFO

# REMOVED: Specific logger levels that might cause issues in ES 8.x

# ---------------------------------- Snapshots ---------------------------------

# Repository settings for snapshots (if NFS is configured)
{% if nfs_mount_point is defined %}
path.repo: ["{{ nfs_mount_point }}/snapshots"]
{% endif %}

# ---------------------------------- CORS ---------------------------------------

# CORS settings for development (disable in production)
{% if elasticsearch_cors_enabled | default(false) %}
http.cors.enabled: true
http.cors.allow-origin: "*"
http.cors.allow-headers: "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
http.cors.allow-credentials: true
{% endif %}

# ---------------------------------- Experimental ---------------------------

# Experimental features (use with caution)
{% if elasticsearch_experimental_features | default(false) %}
# Enable experimental features
xpack.security.enrollment.enabled: false
{% endif %}

# ================================ End of Configuration ===========================

# Configuration generated by Ansible on {{ ansible_date_time.iso8601 }}
# Node: {{ inventory_hostname }}
# Groups: {{ group_names }}
# Roles: {{ elasticsearch_node_roles | default('not set') }}
# SSL HTTP: {{ es_enable_http_ssl | default(true) }}
# SSL Transport: {{ es_enable_transport_ssl | default(true) }}