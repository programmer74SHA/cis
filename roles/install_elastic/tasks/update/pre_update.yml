---
- name: Take backup from elasticsearch config dir
  archive:
    path: /etc/elasticsearch
    format: gz
    dest:  "/var/siem/elasticsearch-config-backup-V{{ hostvars[groups['BDA'][0]].installed_elasticsearch_version }}.tar.gz"
    remove: False
  when: "'ELASTICSEARCH' in group_names"

- name: Create Updater user
  block:
    - name: Generate password for updater user
      set_fact:
        updater_user_password: "{{ lookup('community.general.random_string', length=16, special=false) }}"
      when: "'BDA' in group_names"

    - name: Set fact for updater user password
      set_fact:
        updater_user_password: "{{ hostvars[groups['BDA'][0]].updater_user_password }}"

    - name: get list of the instance user
      command: >
        /usr/share/elasticsearch/bin/elasticsearch-users list
      no_log: True
      register: list_of_users

    - name: Remove updater user if exists
      command: /usr/share/elasticsearch/bin/elasticsearch-users userdel {{ updater_user_username }}
      when: updater_user_username in list_of_users.stdout

    - name: Add updater user
      command: >
        /usr/share/elasticsearch/bin/elasticsearch-users useradd {{ updater_user_username }} -p {{ updater_user_password }} -r superuser
      no_log: True

    - name: Set User Passwords
      command: >
        /usr/share/elasticsearch/bin/elasticsearch-users passwd {{ updater_user_username }} -p {{ updater_user_password }}
      changed_when: False
  when: "'ELASTICSEARCH' in group_names"

- name: Retrive Master node
  block:
    - name: Get master node hostname
      uri:
        url: "https://{{ ansible_default_ipv4.address }}:9200/_cat/master?format=json"
        method: GET
        return_content: yes
        status_code: 200
        timeout: 20
        force_basic_auth: yes
        user: "{{ updater_user_username }}"
        password: "{{ updater_user_password }}"
        validate_certs: no
      register: master_node_informations
      when: "'BDA' in group_names"

    - name: set fact for master node hostname
      set_fact: 
        master_node_hostname: "{{ (hostvars[groups['BDA'][0]].master_node_informations.json | first).node }}"

- name: Disable shard allocation
  uri:
    url: https://{{ ansible_default_ipv4.address }}:9200/_cluster/settings?pretty
    user: "{{ updater_user_username }}"
    method: PUT
    password: "{{ updater_user_password }}"
    force_basic_auth: yes
    validate_certs: "{{ es_validate_certs }}"
    body:
      persistent:
        cluster.routing.allocation.enable: primaries
    body_format: json
    headers:
      Content-Type: application/json
  when: "'BDA' in group_names"

- name: Stop logstash service in all SF hosts
  service:
    name: logstash
    state: stopped
  when: "'SF' in group_names"

- name: Set fact for hosts that has elastic agnet
  stat:
    path: "/etc/systemd/system/elastic-agent.service"
  register: elastic_agent_service_file
  check_mode: no

- name: Stop elastic-agent service
  service:
    name: elastic-agent
    state: stopped
  when: elastic_agent_service_file.stat.exists
