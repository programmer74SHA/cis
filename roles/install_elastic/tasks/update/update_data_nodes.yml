---
- name: Update data nodes
  block:
    - name: Check for Elasticsearch to be healthy
      uri:
        url: "https://{{ ansible_default_ipv4.address }}:9200/_cat/health?format=json"
        method: GET
        return_content: yes
        status_code: 200
        timeout: 20
        force_basic_auth: yes
        user: "{{ updater_user_username }}"
        password: "{{ updater_user_password }}"
        validate_certs: no
      register: elasticsearch_status
      retries: 60
      delay: 60
      until:
        - elasticsearch_status.status == 200
        - '"green" in elasticsearch_status.json[0]["status"] or "yellow" in elasticsearch_status.json[0]["status"]'

    - name: Stop non-essential indexing and perform a flush.
      uri:
        url: https://{{ ansible_default_ipv4.address }}:9200/_flush
        method: POST
        user: "{{updater_user_username  | default(omit)}}"
        password: "{{updater_user_password | default(omit)}}"
        timeout: 300
        force_basic_auth: yes
        validate_certs: "{{ es_validate_certs }}"

    - name: Temporarily stop the tasks associated with active machine learning jobs and datafeeds
      uri:
        url: https://{{ ansible_default_ipv4.address }}:9200/_ml/set_upgrade_mode?enabled=true
        user: "{{updater_user_username  | default(omit)}}"
        method: POST
        password: "{{updater_user_password | default(omit)}}"
        force_basic_auth: yes
        validate_certs: "{{ es_validate_certs }}"

    - name: shotdown elasticsearch
      service:
        name: elasticsearch
        state: stopped

    - name: Upgrade Elasticsearch package
      apt:
        name: elasticsearch
        state: latest

    - name: "copy x-pack-core-{{ es_version }}.jar"
      copy:
        src: "files/x-pack-core-{{ es_version }}.jar"
        dest: "/usr/share/elasticsearch/modules/x-pack-core/x-pack-core-{{ es_version }}.jar"

    - name: Start the upgraded node
      service:
        name: elasticsearch
        state: started
        daemon_reload: true
        enabled: yes

    - name: wait for node to join into the cluster
      uri:
        url: "https://{{ hostvars[groups['BDA'][0]]['ansible_default_ipv4']['address'] }}:9200/_cat/nodes?format=json"
        method: GET
        user: "{{ updater_user_username }}"
        password: "{{ updater_user_password }}"
        force_basic_auth: yes
        validate_certs: "{{ es_validate_certs }}"
        return_content: yes
        status_code: 200
        timeout: 15
      register: elasticsearch_status
      retries: 20
      delay: 20
      until:
        - elasticsearch_status.status == 200
        - >
          (
            elasticsearch_status.json
            | selectattr('ip', 'equalto', ansible_default_ipv4.address)
            | list | length
          ) > 0

    - name: Wait for Elasticsearch to be healthy
      uri:
        url: "https://{{ ansible_default_ipv4.address }}:9200/_cat/health?format=json"
        method: GET
        return_content: yes
        timeout: 20
        user: "{{ updater_user_username }}"
        password: "{{ updater_user_password }}"
        validate_certs: no
        force_basic_auth: yes
      register: final_elasticsearch_status
      retries: 60
      delay: 60
      until:
        - elasticsearch_status.status == 200
        - '"green" in final_elasticsearch_status.json[0]["status"] or "yellow" in final_elasticsearch_status.json[0]["status"]'

    - name: Restart machine learning jobs
      uri:
        url: https://{{ ansible_default_ipv4.address }}:9200/_ml/set_upgrade_mode?enabled=false
        user: "{{updater_user_username  | default(omit)}}"
        method: POST
        password: "{{updater_user_password | default(omit)}}"
        force_basic_auth: yes
        validate_certs: "{{ es_validate_certs }}"
