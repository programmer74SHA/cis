---
# roles/install_elastic/tasks/elasticsearch-docker-deploy.yml
# UPDATED: Using custom Docker bridge network per host

- name: Display Docker deployment banner
  debug:
    msg: |
      üê≥ Elasticsearch Docker Deployment
      =================================
      Host: {{ inventory_hostname }}
      Network: {{ docker_network_name }} ({{ docker_network_subnet }})
      Nodes: {{ elasticsearch_nodes | length }}

- name: Verify Docker network exists
  shell: docker network ls --format "{{ '{{' }}.Name{{ '}}' }}" | grep -x "{{ docker_network_name }}"
  register: network_exists
  changed_when: false
  failed_when: network_exists.rc != 0

- name: Check if Docker Compose file exists
  stat:
    path: "{{ elasticsearch_compose_path }}"
  register: compose_file_exists

- name: Fail if Docker Compose file is missing
  fail:
    msg: "Docker Compose file not found at {{ elasticsearch_compose_path }}"
  when: not compose_file_exists.stat.exists

- name: Stop existing Elasticsearch containers
  shell: |
    cd {{ elasticsearch_docker_path }}
    docker-compose down
  ignore_errors: true

- name: Deploy Elasticsearch using Docker Compose
  shell: |
    cd {{ elasticsearch_docker_path }}
    docker-compose up -d
  register: elasticsearch_deployment
  retries: 3
  delay: 10

- name: Wait for containers to be running
  shell: |
    cd {{ elasticsearch_docker_path }}
    docker-compose ps --services --filter "status=running" | wc -l
  register: running_containers
  until: running_containers.stdout | int == (elasticsearch_nodes | length)
  retries: 30
  delay: 10
  changed_when: false

- name: Wait additional time for Elasticsearch to fully start
  wait_for:
    timeout: 60

- name: Display container deployment status
  debug:
    msg: |
      üê≥ Elasticsearch Docker Deployment Status
      =======================================
      
      Host: {{ inventory_hostname }}
      Network: {{ docker_network_name }} ({{ docker_network_subnet }})
      Expected containers: {{ elasticsearch_nodes | length }}
      Running containers: {{ running_containers.stdout | default('Unknown') }}
      
      üìã Deployed Nodes:
      {% for node in elasticsearch_nodes %}
      - {{ node.name }}: {{ 'https' if es_enable_http_ssl else 'http' }}://{{ hostvars[inventory_hostname].node_hostname }}:{{ es_http_base_port + node.port_offset }}
      {% endfor %}
      
      üîß Management Commands:
      # View all containers
      cd {{ elasticsearch_docker_path }} && docker-compose ps
      
      # View logs
      cd {{ elasticsearch_docker_path }} && docker-compose logs [node-name]
      
      # Check network
      docker network inspect {{ docker_network_name }}
      
      # Restart services
      cd {{ elasticsearch_docker_path }} && docker-compose restart
      
      ‚úÖ Docker deployment completed!