# roles/install_elastic/tasks/xpack/elasticsearch-xpack-multinode.yml
---
- name: Multi-Node X-Pack Security Configuration
  block:
    - name: Display X-Pack security setup banner
      debug:
        msg: |
          🔐 Multi-Node X-Pack Security Configuration
          ==========================================
          Physical Host: {{ inventory_hostname }}
          BDA Nodes: {{ elasticsearch_nodes | selectattr('group_membership', 'contains', 'BDA') | list | length }}
          Processing security configuration for each node...

    - name: Process keystore configuration for each BDA node
      include_tasks: xpack/security/elasticsearch-xpack-keystore-node.yml
      loop: "{{ elasticsearch_nodes | selectattr('group_membership', 'contains', 'BDA') | list }}"
      loop_control:
        loop_var: node
        label: "{{ node.name }}"

    - name: Configure file-based security realm for BDA nodes
      include_tasks: xpack/security/elasticsearch-security-file-multinode.yml
      when: 
        - (es_users is defined and es_users.file is defined) or (es_roles is defined and es_roles.file is defined)
        - elasticsearch_nodes | selectattr('group_membership', 'contains', 'BDA') | list | length > 0

    - name: Configure role mapping for BDA nodes
      template:
        src: security/role_mapping.yml.j2
        dest: "/usr/share/siem/elasticsearch/{{ node.name }}/config/role_mapping.yml"
        owner: "1000"
        group: "1000"
        mode: "0660"
      loop: "{{ elasticsearch_nodes | selectattr('group_membership', 'contains', 'BDA') | list }}"
      loop_control:
        loop_var: node
        label: "{{ node.name }}"
      when: 
        - es_role_mapping is defined
        - elasticsearch_nodes | selectattr('group_membership', 'contains', 'BDA') | list | length > 0

    - name: Wait for X-Pack security to be initialized
      uri:
        url: "{{ 'https' if es_enable_http_ssl | default(true) else 'http' }}://{{ ansible_default_ipv4.address }}:{{ es_http_base_port }}/_cluster/health?wait_for_status=yellow&timeout=60s"
        method: GET
        user: "{{ es_api_basic_auth_username | default('elastic') }}"
        password: "{{ es_api_basic_auth_password }}"
        force_basic_auth: yes
        validate_certs: no
        timeout: 60
      register: security_health_check
      until: security_health_check.status == 200
      retries: 10
      delay: 30
      when: 
        - es_api_basic_auth_password is defined
        - elasticsearch_nodes | selectattr('group_membership', 'contains', 'BDA') | list | length > 0

    - name: Display X-Pack security configuration status
      debug:
        msg: |
          🔐 Multi-Node X-Pack Security Status
          ===================================
          
          ✅ Configuration Applied To:
          {% for node in elasticsearch_nodes | selectattr('group_membership', 'contains', 'BDA') | list %}
          - {{ node.name }} ({{ ansible_default_ipv4.address }}:{{ es_http_base_port + node.port_offset }})
          {% endfor %}
          
          🔑 Security Features:
          - Keystore configured: ✅
          - Bootstrap password set: ✅
          - File realm configured: {{ '✅' if (es_users is defined and es_users.file is defined) else '⏭️ Skipped' }}
          - Role mapping configured: {{ '✅' if es_role_mapping is defined else '⏭️ Skipped' }}
          
          🚀 Ready for native realm configuration and license activation!

  rescue:
    - name: Display container logs on X-Pack failure
      shell: docker logs --tail 50 {{ node.name }}
      register: container_logs
      ignore_errors: yes
      loop: "{{ elasticsearch_nodes | selectattr('group_membership', 'contains', 'BDA') | list }}"
      loop_control:
        loop_var: node
        label: "{{ node.name }}"

    - name: Show container logs for debugging
      debug:
        msg: "Container logs for {{ item.node.name }}: {{ item.stdout_lines }}"
      loop: "{{ container_logs.results | default([]) }}"
      when: 
        - container_logs is defined
        - item.stdout_lines is defined

    - name: Display X-Pack configuration failure message
      debug:
        msg: |
          ❌ X-Pack security configuration failed!
          
          This could be due to:
          - Container not running
          - Permission issues
          - Network connectivity problems
          - Certificate issues
          
          Check the container logs above for more details.
          You can retry with: --tags cluster --extra-vars "force_keystore_recreate=true"

  when: 
    - elasticsearch_nodes is defined
    - elasticsearch_nodes | selectattr('group_membership', 'contains', 'BDA') | list | length > 0