# roles/install_elastic/tasks/xpack/security/elasticsearch-xpack-keystore-node.yml
# Individual node keystore configuration (called via include_tasks with loop)
---
- name: Check if {{ node.name }} container is running
  shell: docker ps -q -f name={{ node.name }} -f status=running
  register: container_check
  changed_when: false

- name: Wait for {{ node.name }} to be ready
  shell: |
    docker exec {{ node.name }} \
    /usr/share/elasticsearch/bin/elasticsearch-keystore --help
  register: container_ready
  until: container_ready.rc == 0
  retries: 5
  delay: 10
  changed_when: false
  when: container_check.stdout != ""

- name: Check if keystore exists in {{ node.name }} container
  shell: |
    docker exec {{ node.name }} \
    /usr/share/elasticsearch/bin/elasticsearch-keystore list
  register: keystore_exists
  changed_when: false
  failed_when: false
  when: container_check.stdout != ""

- name: Create keystore for {{ node.name }} if it doesn't exist
  shell: |
    docker exec {{ node.name }} \
    /usr/share/elasticsearch/bin/elasticsearch-keystore create
  when: 
    - container_check.stdout != ""
    - keystore_exists.rc != 0
  register: keystore_creation

- name: Force recreate keystore for {{ node.name }} if needed
  shell: |
    echo "y" | docker exec -i {{ node.name }} \
    /usr/share/elasticsearch/bin/elasticsearch-keystore create
  when: 
    - container_check.stdout != ""
    - keystore_exists.rc == 0
    - force_keystore_recreate | default(false)

- name: List keystore entries for {{ node.name }}
  shell: |
    docker exec {{ node.name }} \
    /usr/share/elasticsearch/bin/elasticsearch-keystore list
  register: list_keystore
  changed_when: false
  check_mode: no
  when: container_check.stdout != ""

- name: Create Bootstrap password for elastic user in {{ node.name }}
  shell: |
    echo {{ es_api_basic_auth_password | quote }} | \
    docker exec -i {{ node.name }} \
    /usr/share/elasticsearch/bin/elasticsearch-keystore add -x 'bootstrap.password'
  when:
    - container_check.stdout != ""
    - es_api_basic_auth_username is defined 
    - list_keystore is defined
    - es_api_basic_auth_username == 'elastic' 
    - list_keystore.stdout_lines is defined
    - "'bootstrap.password' not in list_keystore.stdout_lines"
  no_log: true
  register: bootstrap_result
  failed_when: 
    - bootstrap_result.rc != 0
    - "'already exists' not in bootstrap_result.stderr"

- name: Add custom keystore entries for {{ node.name }}
  shell: |
    echo {{ item.value | quote }} | \
    docker exec -i {{ node.name }} \
    /usr/share/elasticsearch/bin/elasticsearch-keystore add -x -f {{ item.key }}
  with_items: "{{ es_keystore_entries | default([]) }}"
  when:
    - container_check.stdout != ""
    - item.state is undefined or item.state == 'present'
    - list_keystore is defined and list_keystore.stdout_lines is defined
    - item.force|default(False) or (not item.force|default(False) and item.key not in list_keystore.stdout_lines)
    - "'bootstrap.password' not in item.key"
  no_log: true

- name: Set keystore permissions in {{ node.name }} container
  shell: |
    if docker exec {{ node.name }} test -f /usr/share/elasticsearch/config/elasticsearch.keystore; then
      docker exec {{ node.name }} chown elasticsearch:elasticsearch /usr/share/elasticsearch/config/elasticsearch.keystore
      docker exec {{ node.name }} chmod 660 /usr/share/elasticsearch/config/elasticsearch.keystore
      echo "Permissions set successfully for {{ node.name }}"
    else
      echo "Keystore file not found in {{ node.name }}, skipping permission change"
    fi
  when: container_check.stdout != ""
  register: keystore_permissions_result
  changed_when: "'Permissions set successfully' in keystore_permissions_result.stdout"