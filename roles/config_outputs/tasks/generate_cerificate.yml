- name: Check if logstash certificate exists
  stat:
    path: "{{ logstash_cert_output }}"
  register: logstash_cert

- name: Check if client certificate exists
  stat:
    path: "{{ client_cert_output }}"
  register: client_cert

- name:  Generate Logstash certificatre
  block:
    - name: "Generating certificate for the Logstash"
      command: >
        ./elasticsearch-certutil cert --silent --pem
        --name {{ logstash_cert_name }}
        --out {{ logstash_cert_output }}
        --days 1825
        --ca-cert {{ elastic_cert_dir }}/ca/ca.crt
        --ca-key {{ elastic_cert_dir }}/ca/ca.key
      args:
        chdir: "/usr/share/elasticsearch/bin"

    - name: create certificare folder
      file:
        path: "{{ logstash_cert_pem_dir }}"
        state: directory

    - name: "Extract logstash certificate files"
      unarchive:
        src: "{{ logstash_cert_output }}"
        dest: "{{ logstash_cert_pem_dir }}"

  when: not logstash_cert.stat.exists


- name: Generate client certificatre
  block:
    - name: "Generating certificate for the client"
      command: >
        ./elasticsearch-certutil cert --silent --pem
        --name {{ client_cert_name }}
        --out {{ client_cert_output }}
        --days 1825
        --ca-cert {{ elastic_cert_dir }}/ca/ca.crt
        --ca-key {{ elastic_cert_dir }}/ca/ca.key
      args:
        chdir: "/usr/share/elasticsearch/bin"

    - name: create certificare folder
      file:
        path: "{{ client_cert_pem_dir }}"
        state: directory

    - name: "Extract client certificate files"
      unarchive:
        src: "{{ client_cert_output }}"
        dest: "{{ client_cert_pem_dir }}"

  when: not client_cert.stat.exists


- name: Export the keys as variables
  block:
    - name: export the CA key
      slurp:
        src:  "{{ elastic_cert_dir }}/ca/ca.crt"
      register: elastic_ca

    - name: export the  client certificate
      slurp:
        src:  "{{ client_cert_src_crt }}"
      register: client_crt

    - name: export the client certificate key
      slurp:
        src: "{{ client_cert_src_key }}"
      register: client_key
      