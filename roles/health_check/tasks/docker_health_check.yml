---
- name: integrations server and elasticsearch maps server health check
  block:
    - name: Get list of Docker container IDs
      command: docker ps -q
      register: container_ids

    - name: Check health status of Docker Compose services
      shell: >
        docker inspect --format={% raw %}'{{.State.Health.Status}} {{.Name}}'{% endraw %} {{ item }}
      loop: "{{ container_ids.stdout_lines }}"
      register: health_check_output
      failed_when: false

    - name: Identify unhealthy services
      set_fact:
        unhealthy_services: "{{ unhealthy_services | default([]) + [item.stdout.split()[1] | regex_replace('^/','') | regex_replace('_[0-9]+$','')] }}"
      when: "item.stdout.split()[0] != 'healthy'"
      loop: "{{ health_check_output.results }}"

    - name: Display unhealthy services
      debug:
        msg: "Unhealthy services: {{ unhealthy_services }}"
      when: unhealthy_services is defined and unhealthy_services | length > 0

    - name: Recreate elastic-maps-server if unhealthy
      docker_compose:
        project_src: "/usr/share/siem/map"
        state: present
        recreate: always
      when: "'map_elastic-maps-server' in unhealthy_services | default([])"

    - name: Recreate elastic-epr if unhealthy
      docker_compose:
        project_src: "/usr/share/siem/integration"
        state: present
        recreate: always
      when: "'integration_elastic-epr' in unhealthy_services | default([])"
  tags: [cluster , simple , new-node , health_check]
