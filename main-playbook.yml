---
- name: "APK SIEM ELK Cluster Installer - Fixed & Simplified Version"
  hosts: all
  serial: "{{ ansible_serial | default('100%') }}"
  gather_facts: true
  
  pre_tasks:
    - name: Set deployment facts
      set_fact:
        deployment_start_time: "{{ ansible_date_time.iso8601 }}"
        
    - name: Display deployment banner
      debug:
        msg: |
          ╔══════════════════════════════════════════════════════════════╗
          ║              APK SIEM ELK CLUSTER DEPLOYMENT                 ║
          ╠══════════════════════════════════════════════════════════════╣
          ║ Host: {{ inventory_hostname }}                               ║
          ║ IP: {{ ansible_default_ipv4.address }}                       ║
          ║ Groups: {{ group_names | join(', ') }}                       ║
          ║ Start Time: {{ deployment_start_time }}                      ║
          ╚══════════════════════════════════════════════════════════════╝
        
  roles:
    # Pre-flight checks
    - role: pre_checks
      tags: [always]
    
    # Node identification
    - role: add-new-node
      tags: [always]
    
    # Install Elasticsearch on all nodes with elasticsearch_nodes defined
    # - role: install_elastic
    #   when: >
    #     ('ELASTICSEARCH' in group_names) and 
    #     (hostvars[inventory_hostname].get('elasticsearch_nodes', []) | length > 0)
    #   tags: [cluster, simple, elasticsearch]
    
    # Install Kibana only on BDA nodes
    - role: install_kibana
      when: >
        ('BDA' in group_names) and 
        (hostvars[inventory_hostname].get('install_kibana', false) | bool)
      tags: [cluster, simple, kibana]
    
  # post_tasks:
  #   - name: Display deployment completion status
  #     debug:
  #       msg: |
  #         ╔══════════════════════════════════════════════════════════════╗
  #         ║                DEPLOYMENT COMPLETED SUCCESSFULLY             ║
  #         ╠══════════════════════════════════════════════════════════════╣
  #         ║ Host: {{ inventory_hostname }}                               ║
  #         ║ Start Time: {{ deployment_start_time }}                      ║
  #         ║ End Time: {{ ansible_date_time.iso8601 }}                    ║
  #         ║                                                              ║
  #         ║ Services Deployed:                                           ║
  #         {% if hostvars[inventory_hostname].get('elasticsearch_nodes', []) | length > 0 %}
  #         ║ ✅ Elasticsearch: {{ hostvars[inventory_hostname].get('elasticsearch_nodes', []) | length }} nodes ║
  #         {% endif %}
  #         {% if 'BDA' in group_names and hostvars[inventory_hostname].get('install_kibana', false) %}
  #         ║ ✅ Kibana: Management Interface                              ║
  #         {% endif %}
  #         ║                                                              ║
  #         ║ Access Information:                                          ║
  #         {% if hostvars[inventory_hostname].get('elasticsearch_nodes', []) | length > 0 %}
  #         ║ 🔗 Elasticsearch: https://{{ ansible_default_ipv4.address }}:9200  ║
  #         {% endif %}
  #         {% if 'BDA' in group_names and hostvars[inventory_hostname].get('install_kibana', false) %}
  #         ║ 🔗 Kibana: https://{{ ansible_default_ipv4.address }}:5601          ║
  #         ║ 👤 Username: elastic                                         ║
  #         ║ 🔑 Password: [Check inventory file]                          ║
  #         {% endif %}
  #         ║                                                              ║
  #         ║ Management Commands:                                         ║
  #         ║ # Verify cluster health:                                     ║
  #         ║ curl -k -u elastic:PASSWORD \                               ║
  #         ║   https://{{ ansible_default_ipv4.address }}:9200/_cluster/health        ║
  #         ║                                                              ║
  #         ║ # Check containers:                                          ║
  #         ║ docker ps                                                    ║
  #         ║                                                              ║
  #         ║ # View logs:                                                 ║
  #         ║ docker logs [container-name]                                ║
  #         ╚══════════════════════════════════════════════════════════════╝
  #     when: >
  #       (inventory_hostname in groups.get('BDA', [])) or 
  #       (inventory_hostname in groups.get('ELASTICSEARCH', []))
        
  #   - name: Create cluster verification script
  #     template:
  #       src: cluster-verification.sh.j2
  #       dest: "{{ siem_base_path }}/cluster-verification.sh"
  #       mode: "0755"
  #       owner: root
  #       group: root
  #     when: inventory_hostname in groups.get('BDA', [])
      
  # tags: [cluster, simple]